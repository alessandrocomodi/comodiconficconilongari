#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{babel}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing double
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Design Document
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash
[1cm]
\end_layout

\end_inset


\begin_inset Graphics
	filename images/logo-polimi.png
	display false
	width 60line%

\end_inset


\end_layout

\begin_layout Author
Alessandro Comodi, Davide Conficconi, Stefano Longari
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
Purpose
\end_layout

\begin_layout Standard
The Design Document has the objective of defining the detailed design choices
 for MTS, explaining with accuracy the components of the system.
 In particular it has the purpose of opening the black box system showed
 in the RASD and analyzing his components.
 
\end_layout

\begin_layout Section
Scope
\end_layout

\begin_layout Standard
As described in the RASD, the system to be implemented serves to help users
 in requesting or reserving taxis and to manage fairly the queues of taxis
 around the various zones of the city.
\end_layout

\begin_layout Standard
Users who are enrolled with the system can make requests or reservations.
 To insert the starting and destination addresses there is the possibility
 to use a map, ore eventually write the addresses by hand.
 Users are also able to add the sharing option, thanks to which they can
 share the ride with other users and split the price.
\end_layout

\begin_layout Standard
Taxi drivers, on the other hand, have the possibility to confirm or decline
 rides.
 They can count on a fair management of the taxi queues which distributes
 cleverly the taxis so that it is impossible to have drivers to whom do
 not arrive any ride request.
 This is given by the fact that each taxi, when set to available, is added
 in a FIFO queue of a specific zone.
 
\end_layout

\begin_layout Section
Glossary
\end_layout

\begin_layout Standard
In this section will be explained the unclear terms and achronyms in order
 to avoid ambiguities and help the reader in understeanding this document.
\end_layout

\begin_layout Itemize
S2B: it is the achronym for 
\begin_inset Quotes eld
\end_inset

System To Be
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
RASD: Requirement Analysis & Specification Document.
\end_layout

\begin_layout Itemize
DB: acronym for DataBase.
\end_layout

\begin_layout Itemize
DBMS: DataBase Management System.
\end_layout

\begin_layout Itemize
MVC: Model View Controller design pattern.
\end_layout

\begin_layout Itemize
FIFO: First-In First-Out policy.
\end_layout

\begin_layout Itemize
OS: Operating System.
\end_layout

\begin_layout Itemize
JavaEE: Java Enterprise Edition.
\end_layout

\begin_layout Itemize
XML: It is the eXtensible Markup Language.
\end_layout

\begin_layout Itemize
MTS: MyTaxiService, it is the name of the application.
\end_layout

\begin_layout Itemize
JDBC: Java DataBase Connectivity.
\end_layout

\begin_layout Section
Reference Documents
\end_layout

\begin_layout Standard
The documents used as references in order to redact this document are:
\end_layout

\begin_layout Itemize
IEEE Std 1016 - 2009 for Software Design Descriptions.
\end_layout

\begin_layout Itemize
RASD for MTS, previously redacted.
\end_layout

\begin_layout Section
Document Structure
\end_layout

\begin_layout Standard
This document is structured in Chapters, each describing a different design
 aspect of the S2B.
\end_layout

\begin_layout Itemize
Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Architectural-Design"

\end_inset

 deals with the Architectural design of the system, describing a detailed
 view of the various components and their behavior among each other.
\end_layout

\begin_layout Itemize
Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Algorithm-Design"

\end_inset

 analyzes the main algorithms that are needed in order to let the application
 work as required.
 These algorithms are written in natural language.
\end_layout

\begin_layout Itemize
Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:User-Interface-Design"

\end_inset

 is about the User Interfeces design and here are present the mockups thanks
 to which the developer can have an idea on how the front-end of the application
 must be implemented.
\end_layout

\begin_layout Itemize
Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Requirement's-Traceability"

\end_inset

 shows the link between the choices made in the design of the system and
 the requirements written in the RASD.
\end_layout

\begin_layout Itemize
Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Other-Information"

\end_inset

 contains information relative to this document but not with the system
 itself.
\end_layout

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:Architectural-Design"

\end_inset

Architectural Design
\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
This section displays the main architectural project.
 Firstly it’s presented a high level representation about our S2B and its
 components interactions.
 Afterwards the document shows in a deeper way different kinds of view about
 the system.
 Eventually it describes other various features about design and architecture
 decisions.
\end_layout

\begin_layout Section
High Level Components and Their Interaction
\end_layout

\begin_layout Standard
This section aims to provide, through the diagram in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:High-level-components"

\end_inset

, a general overview about system’s architecture and main interactions between
 each component.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:High-level-components"

\end_inset

High level components
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/HighLevelDiagram.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset

The architectural style appointed is a client-server application with a
 multi-tier style: a client tier, a tier for the business logic, a web tier
 and a tier for the data storage.
 All main communications between each component and, or, tier happen in
 an asynchronous way.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Client tier
\end_layout

\begin_layout Standard
This layer represents the different methods of access to the application:
 via one of the main common browsers (e.g.: Firefox, Chrome, etc…), or through
 the mobile application, available for the main mobile OSs.
 This logic level has the duty of representing information to the users
 and interacting with them (this can be seen as the View part of the MVC
 pattern).
 The Web Client communicates with the business logic only through a Web
 tier.
\end_layout

\begin_layout Subsection
Web tier
\end_layout

\begin_layout Standard
This layer contains a Web Server that functions as middleware between the
 Web Client and the Business Logic Application.
\end_layout

\begin_layout Subsection
Business tier
\end_layout

\begin_layout Standard
This layer represents the system's core in fact all the application logic
 is inside this tier.
 It has three main components: one represents the Manager of all the rides,
 another one the Queue Manager and in the end a component which handles
 all the connections with the front end side, called Connection Handler.
 The Business tier can also access to the data in the Data tier.
\end_layout

\begin_layout Subsection
Data tier
\end_layout

\begin_layout Standard
This layer contains a DBMS which takes care about the data, their storage
 and their access.
 Only the Business tier can access to this tier.
\end_layout

\begin_layout Section
Component View
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Component-view"

\end_inset

Component view
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/ComponentDiagram.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Client tier
\end_layout

\begin_layout Subsubsection
Mobile-Client
\end_layout

\begin_layout Standard
The mobile client is the application that has to be downloaded and installed
 in the mobile devices from the application stores of the various OSs.
 It communicates directly with the connection handler through which it sends
 and receives all the messages necessary to the application in order to
 fulfill its functionalities.
\end_layout

\begin_layout Subsubsection
Web-Client 
\end_layout

\begin_layout Standard
The web client, differently from the mobile client, has no need to be installed
 in the PC device of the users, but is sufficient to use a web browser (e.g.
 Chrome, Safari, Firefox, …).
 All the messages that the web client sends and receives from the Connection
 handler pass through an external Web server.
\end_layout

\begin_layout Subsection
Web tier
\end_layout

\begin_layout Subsubsection
Web-Server 
\end_layout

\begin_layout Standard
This component, which is not integrated within MTS, is an external service
 offered by GlassFish and is written entirely using Java EE.
 It puts in communication the web client with the connection handler.
 This component is needed in order to let the information coming from the
 connection handler to be readable by the web browser, so it handles only
 the presentation layer of the application.
 All the application logic is handled by the Application controller in the
 Business tier.
\end_layout

\begin_layout Subsection
Business tier
\end_layout

\begin_layout Subsubsection
Connection-Handler 
\end_layout

\begin_layout Standard
The connection handler is the component that handles all the communication
 between the client tier and the application itself.
 It is connected with the Controller application and the Security Manager.
 It sends all the information parsed in XML transparently with respect to
 the client components.
\end_layout

\begin_layout Subsubsection
Application-Controller 
\end_layout

\begin_layout Standard
This component is the core of the application, it communicates with all
 the other components in the business tier.
 It handles the logic of the application.
\end_layout

\begin_layout Subsubsection
Ride Manager
\end_layout

\begin_layout Standard
This component is necessary to handle successfully all the matchings between
 a user and a driver in order to have all the right information of a ride
 and to send all the notifications to the right users and drivers.
 It contains some of the main algorithms described in Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Algorithm-Design"

\end_inset

.
\end_layout

\begin_layout Subsubsection
Queue Manager
\end_layout

\begin_layout Standard
This component is another important part of the application since it handles
 all the placements of the various taxis around the zones.
 It contains the main algorithms for the queue management described in Chapter
 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Algorithm-Design"

\end_inset

.
 
\end_layout

\begin_layout Subsubsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Security-Manager"

\end_inset

Security Manager
\end_layout

\begin_layout Standard
The security manager is the component that has to grant the security of
 the application.
 It prevents guests who are not enrolled to the system to access to it.
 It also ensures that all the private information about the users are kept
 safe.
\end_layout

\begin_layout Subsubsection
Data Access Manager
\end_layout

\begin_layout Standard
This component has the task to communicate with the Data tier and more precisely
 with the DBMS.
 It receives all the information to store or to retrieve to and from the
 DBMS.
 It uses JDBC to communicate with the DBMS.
\end_layout

\begin_layout Subsection
Data tier
\end_layout

\begin_layout Subsubsection
DBMS
\end_layout

\begin_layout Standard
This is the Data Base Management System, which has the task to store correctly
 all the data received from the business tier and to retrieve all the informatio
n that the Data access manager asks to it.
 The DBMS must ensure the durability and consistency of the stored data.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
E-R schema of the Database
\end_layout

\begin_layout Standard
In this subsection there is an Entity-Relation schema representing an overview
 of the DB entities.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
E-R schema
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/ER.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Deployment View
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Deployment-view"

\end_inset

Deployment view
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/DeploymentDiagram.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The S2B was thought to mirror the architectural design, therefore each logic
 tier is mapped into a physical layer.
 The client side of the application is sited on a device for each user:
 the mobile client is deployed on a mobile device, while, on the web side,
 all users can reach the application through one of the main common browser.
 The web server is placed on a separate machine because it is going to be
 deployed on an external service like Glassfish.
 All the Business logic components are deployed together on a server farm,
 since the application is meant to be used by a large number of users.
 The DBMS stands apart from all other components for security purposes.
\end_layout

\begin_layout Section
Runtime View
\end_layout

\begin_layout Standard
In this section the reader can find the modality in which the various components
 interact with each other, and this is explained through the use of some
 UML sequence diagrams, with their relative description.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Login"

\end_inset

Login
\end_layout

\begin_layout Standard
The Login sequence diagram is exposed in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Login-sequence-diagram"

\end_inset

.
\end_layout

\begin_layout Standard
When an application requests to login it sends its mail and password to
 the system.
 The connectionHandler gets its request and translates it for the security
 manager.
 This asks the dataAccessManager to query the DBMS for the username and
 his password.
 When the query answer returns to the securityManager if they match the
 username and password given by the application the profile of the user
 that corresponds to those credentials is returned to the device through
 the controllerApplication.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Login-sequence-diagram"

\end_inset

Login sequence diagram
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Diagrams/png/login.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Shared-request"

\end_inset

Shared request
\end_layout

\begin_layout Standard
The sared request sequence diagram is exposed in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Shared-request-sequence"

\end_inset

.
\end_layout

\begin_layout Standard
The request for a ride by a logged user is received from the rideManager
 that analyzes it.
 If it is a request to share a ride the rideManager asks the dataAccessManager
 to search in the DBMS for other sharing requests.
 If the dataAccessManager doesn't find any sharing requests near the area
 of this one, the rideManager leaves the request pending in the DBMS for
 some minutes before canceling the sharing option and sending a taxi to
 the user.
 If in these minutes another sharing request arrives from the same area
 of the first one it checks if the two requests are compatible and in case
 they are it provides a shared taxi for both the users.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Shared-request-sequence"

\end_inset

Shared request sequence diagram
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Diagrams/png/DetailedDiagrams__SharingRequest__SharingRequest_1.png
	display false
	width 100line%
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Availability-Management"

\end_inset

Availability Management
\end_layout

\begin_layout Standard
The availability management sequence diagram is exposed in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Availability-management-sequence"

\end_inset

.
\end_layout

\begin_layout Standard
When a driver changes his availability his application requests the QueueManager
 to set him available/busy.
 The QueueManager then alerts the dataAccessManager to set the driver available/
busy in the DBMS, in addition to put him in a queue if the status change
 is to available.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Availability-management-sequence"

\end_inset

Availability management sequence diagram
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Diagrams/png/DetailedDiagrams__DriverStatusUpdate__DriverStatusUpdate_2.png
	display false
	width 100line%

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "sub:Reservation"

\end_inset

Reservation
\end_layout

\begin_layout Standard
The reservation sequence diagram is exposed in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Reservation-sequence-diagram"

\end_inset

.
\end_layout

\begin_layout Standard
When a reservation for a taxi is made, the rideManager registers the request
 in the DBMS to remember it.
 Every five minutes a program runs to check all the reservations and to
 alert the rideManager if there are some that are in need to be set up as
 rides.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Reservation-sequence-diagram"

\end_inset

Reservation sequence diagram
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Diagrams/png/DetailedDiagrams__Reservation__Reservation_3.png
	display false
	width 100line%

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Component Interfaces
\end_layout

\begin_layout Standard
In this section the reader can find how the various components interact
 among each other, i.e.
 the methods offered and visible to the external world.
\end_layout

\begin_layout Subsection
Business tier and Data tier
\end_layout

\begin_layout Standard
Business and data tier communicate through the Data access manager and the
 DBMS.
 The two components can interface one with the other thanks to JDBC, which
 takes care of all the interaction between the Data access manager and the
 Database.
 Thanks to JDBC the developers have no constraints on what kind of DBMS
 they are going to adopt.
\end_layout

\begin_layout Subsection
RideManager interfaces
\end_layout

\begin_layout Standard
This component offers several methods regarding the rides and the most important
 are listed below:
\end_layout

\begin_layout Itemize

\shape italic
Ride createRide(User user, String startingAddress, String destinationAddress,
 boolean sharingOption);
\end_layout

\begin_deeper
\begin_layout Itemize
This method is callable from other components in order to create a new Ride.
 It will gather the information present in the parameters which are the
 user, the starting and destination addresses and the sharing option and
 it will return the created Ride.
 The ride will contain all the information relative to it, which include
 the starting and destination addresses, the user, the driver assigned,
 the sharing option.
 The created ride will be only a request because, in order to create a reservati
on ride, a different method must be called.
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
Ride createRide(User user, String startingAddress, String destinationAddress,
 boolean sharingOption, Date date, Time time);
\end_layout

\begin_deeper
\begin_layout Itemize
This method is similar to the previous one, but it includes also the date
 and time as parameters, which indicate that the ride is a reservation and
 not a simple request.
 It returns the created Ride as before, which will contain also the time
 and date of the appointment of the reservation.
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
Ride reservationInfo(User user);
\end_layout

\begin_deeper
\begin_layout Itemize
This method will return all the rides that correspond to a reservation given
 in input a specific user.
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
Ride requestInfo(User user);
\end_layout

\begin_deeper
\begin_layout Itemize
This method will return the pending request of the user if there is one,
 otherwise it will return a 
\shape italic
null object.
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
boolean deleteRide(Ride ride);
\end_layout

\begin_deeper
\begin_layout Itemize
This method deletes the ride that is given as parameter.
 The ride is deletable only if it is a reservation and, if so, it returns
 
\begin_inset Quotes eld
\end_inset

true
\begin_inset Quotes erd
\end_inset

, otherwise it returns 
\begin_inset Quotes eld
\end_inset

false
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Subsection
QueueManager interfaces
\end_layout

\begin_layout Standard
The queue manager offers all the interfaces regarding the allocation of
 the taxi drivers and their queuing.
\end_layout

\begin_layout Itemize

\shape italic
Driver getDriver(String startingAddress);
\end_layout

\begin_deeper
\begin_layout Itemize
This interface retrieves the first available taxi driver relative to the
 zone of the input address and returns a driver, which will be associated
 to a ride.
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
void dequeueDriver(Driver driver);
\end_layout

\begin_deeper
\begin_layout Itemize
This method is used to dequeue a taxi driver from its relative zone when
 this one is set to 
\begin_inset Quotes eld
\end_inset

busy
\begin_inset Quotes erd
\end_inset

.
 There is no return value.
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
Zone enqueueDriver(Driver driver, Zone currentZone);
\end_layout

\begin_deeper
\begin_layout Itemize
This method offers the possibility to enqueue a taxi driver whenever he
 becomes 
\begin_inset Quotes eld
\end_inset

available
\begin_inset Quotes erd
\end_inset

.
 The queue manager analyzes the distribution of taxis following the relative
 algorithm in Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Algorithm-Design"

\end_inset

 and assignes a zone to the driver.
 The assigned zone is returned from this method.
\end_layout

\end_deeper
\begin_layout Subsection
SecurityManager interfaces
\end_layout

\begin_layout Standard
The security manager has to offer the possibility to grant the authenticity
 and safeness of data and information.
\end_layout

\begin_layout Itemize

\shape italic
boolean validID(String IDdocument);
\end_layout

\begin_deeper
\begin_layout Itemize
This method checks whether the ID document inserted by a guest in order
 to register is valid or not.
 The input parameter is a string containing the ID code and the return value
 is a boolean: true if the ID is valid, false otherwise.
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
boolean validCredentials(String user, String password);
\end_layout

\begin_deeper
\begin_layout Itemize
This method verifies if the user e-mail and password match or if they are
 present in the system.
 As input parameters there are two strings representing respectively the
 user e-mail and the associated password.
 The return value is a boolean which is: true if the user has inserted correct
 credentials or if he is actually registered, false otherwise.
\end_layout

\end_deeper
\begin_layout Subsection
ConnectionHandler interfaces
\end_layout

\begin_layout Standard
This component has the important task to put in communication the client
 tier with the business tier.
 It offers all the procedures that consent the information to travel from
 one side to the other and viceversa.
 The interfaces offered are many and here the reader can find some of the
 most important ones.
\end_layout

\begin_layout Itemize

\shape italic
Object fromClientToServer(Object message);
\end_layout

\begin_deeper
\begin_layout Itemize
This method, in which there are generic objects as parameter and return
 types, permits the communication from client to server.
 The generic 
\begin_inset Quotes eld
\end_inset

message
\begin_inset Quotes erd
\end_inset

 can be complex, in fact it contains all the information about the message
 as the user who sent it and the data stored within it.
\end_layout

\end_deeper
\begin_layout Itemize

\shape italic
Object fromServerToClient(Object message);
\end_layout

\begin_deeper
\begin_layout Itemize
As in the previous method, this one grants the communication from the server
 to the client tier.
 In this case the message contains the information about who is the user
 that has to receive the message and what is the data contained within it.
\end_layout

\end_deeper
\begin_layout Section
Selected Architectural Styles, Patterns and Other Design Decisions
\end_layout

\begin_layout Standard
In this section all the main architectural Styles, Patterns and other design
 decisions are presented and the reasons that brought to select them are
 explained.
\end_layout

\begin_layout Subsection
Client-Server
\end_layout

\begin_layout Standard
This architectural styles is adopted due to the fact that the application
 was thought as follows: a user, who registers himself, accesses to the
 client application side, via mobile applcation or via web browser, and
 asks for a service.
 The kind of service depends on the type of user: if it is a customer user,
 the service required is to provide to him a taxi; if it is a driver user,
 the service required is to provide him, or her, a fair management of his/her
 future ride and assign him to a zone.
 Therefore the Server has to provide all this kind of services in the best
 possile way.
\end_layout

\begin_layout Subsection
Multi-tier Architecture
\end_layout

\begin_layout Standard
The architecture of the S2B is a multi-tier architecture: Data tier, Business
 tier, a Presentation tier interposed,only for the web side, and a final
 Presentation tier.
 This choice allows to minimize as possible the feasible coupling between
 components and an implicit security feature.
 Thanks to the multi-tier architecture the system will be easly maintainable
 and the scalability it's improvable.
\end_layout

\begin_layout Subsection
Model-View-Controller
\end_layout

\begin_layout Standard
The MVC pattern is adopted for the primary front-end purpose of the application:
 the Model is represented by the principal business components, which achieve
 all the required functionalities, and by the DB; the View is the client,
 both mobile and web, with the addition of the web server which also fulfils
 the same objective.
 The Controller of the application is the 
\begin_inset Quotes eld
\end_inset

Application Controller
\begin_inset Quotes erd
\end_inset

 component which has to catch the changes in the Model.
 The same pattern is selected to give to the S2B a Programmatic Interface
 to the server side of the application.
\end_layout

\begin_layout Subsection
Observer pattern
\end_layout

\begin_layout Standard
When an user receives the confirmation about his ride he can check the status
 of the taxi, or when he does a reservation he can check the status of his
 application.
 All this kind of events are solved with a Observer pattern: when the position
 of the taxi, or the reservation, (the subject), changes its status, the
 user's client (observer) is notified about these variations.
\end_layout

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:Algorithm-Design"

\end_inset

Algorithm Design
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:QueueManager-Main-Positioning"

\end_inset

QueueManager Main Positioning Algorithm
\end_layout

\begin_layout Standard
Its objective is to distribute taxis in order to avoid overpopulation of
 a zone and lack of drivers in another.
\end_layout

\begin_layout Subsection
How does it work
\end_layout

\begin_layout Standard
When a taxi driver sets himself as available the system is alerted and checks
 his position through GPS.
 It then searches for all the zones with a low amount of taxis compared
 to the number of requests per hour in the zone.
 If the taxi driver is already in one of those zones he is directly put
 in the queue of the zone.
 If is not, he is given a series of zones in which he can go to be put in
 a queue.
 The system then continues to check the position of the driver until he
 reaches one of those zones.
 As he reaches one he is put in that queue and alerted.
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:QueueManager-Main-Distribution-P"

\end_inset

QueueManager Main Distribution-Prevision Algorithm
\end_layout

\begin_layout Standard
Its objective is to register every ride and use those data to check taxis
 distribution.
\end_layout

\begin_layout Subsection
How does it work
\end_layout

\begin_layout Standard
Each time a ride is set the system registers that information with the place
 and time (considering days of the week).
 Each time a taxi reaches the position to take his clients the system registers
 the amount of time needed.
 Each time a taxi ends a ride the system registers the amount of time used
 by the taxi.
 Each time a request cannot be fulfilled because there is no taxi available
 the system registers it.
 Using those data, knowing the amount of taxi in each zone and the general
 distribution the algorithm then can proceed to calculate which zones have
 already the number of taxi needed to accept all the incoming requests in
 a reasonable time and which ones instead are too slow or will be.
 If there are zones of the second kind, when the Main Positioning Algorithm
 receives a request for positioning someone it is given one of those.
 If the city zones are instead already all of the first kind the system
 will send taxis to different zones, starting from the ones with more requests
 per hour, to try to statistically allow every driver to work the same as
 others.
 
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:RideManager-Main-Ride-creatingù"

\end_inset

RideManager Main Ride-creating Algorithm
\end_layout

\begin_layout Standard
Its objective is to create rides from requests and reservations considering
 the sharing option.
\end_layout

\begin_layout Subsection
How does it work
\end_layout

\begin_layout Standard
Every time a request is created the system starts this algorithm to try
 to match the request with an actual ride: It checks for the starting position
 of the request to know in which zone it is in, and asks the QueueManager
 for informations about the drivers in that zone, like the maximum number
 of seats available.
 If the request has the sharing option enabled the system searches for other
 pending requests with sharing enabled.
 If there aren't the request is left on waiting status for 5 minutes, to
 wait for other requests with sharing enabled.
 If one is found the system in the next step handles the two requests as
 one with the amount of passengers that is the sum of those of the requests.
 If another is not found the request is handled as one with no sharing option
 enabled.
 The system now asks the QueueManager for a driver in that zone that has
 the number of seats necessary to take the request.
 (it is the QueueManager that has to care about finding the first one in
 queue, the RideManager has no informations about that) If there is one,
 the user(s) is alerted about the incoming taxi and a ride is created matching
 user(s) and driver.
 If there is no taxi available with that amount of passengers (or no taxi
 in queue at all) the system checks the nearest zone to the starting position
 of the request.
 If in the queue of that zone there is a taxi available with that amount
 of passengers the ride is created with that taxi and the user(s) alerted
 it might take some time before the taxi arrives.
 If there is no taxi available within all the zones adjoining the one from
 which the request comes from, the user is alerted to try again in some
 minutes and the request dismissed.
 If the request was the union of two sharing requests those are divided
 and the system searches for them as they were normal requests.
 
\end_layout

\begin_layout Section
\begin_inset CommandInset label
LatexCommand label
name "sec:RideManager-main-Reservation-han"

\end_inset

RideManager main Reservation-handling Algorithm
\end_layout

\begin_layout Standard
Its objective is to assure the reservations are fulfilled and the user doesn't
 have to wait for the taxi at the moment indicated.
\end_layout

\begin_layout Subsection
How does it work
\end_layout

\begin_layout Standard
One hour before the reservation starting time the system checks the position
 of the reservation and through that the zone it is in: The algorithm at
 this point postpones itself for an amount of time relative to the amount
 of taxis in the area (for example, if the area is higly overpopulated by
 taxis the algorithm postpones itself of 45 minutes for the research of
 the taxi, while if the area is completely empty it might start the research
 immediately).
 When the time arrives, the system searches for a driver in the zone that
 is available.
 As reservations have the priority respect to normal requests, it continues
 to search for the first driver that sets itself as available if there is
 no one in the queue and matches him with the reservation, telling him the
 position he has to be in and how much time does he have left.
 
\end_layout

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:User-Interface-Design"

\end_inset

User Interface Design
\end_layout

\begin_layout Section
Mockups
\end_layout

\begin_layout Standard
In this section will be presented the mockups of the application.
 They will include both the views for the Mobile and Web application.
\end_layout

\begin_layout Subsection
User side application
\end_layout

\begin_layout Standard
Here are presented the mokups relative to the user side mobile and web applicati
on.
 Each mockup shows the possible actions that the user can choose.
\end_layout

\begin_layout Itemize
In Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Guest-home-mobile"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Guest-home-web"

\end_inset

 there are the reprasantation of what a guest can do when he opens the applicati
on respectively in the mobile and web application.
 He has two choices: login, if he has already made an account, otherwise
 he can click on the register button and go to the registration page.
\end_layout

\begin_layout Itemize
In Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Guest-registration-mobile"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Guest-registration-web"

\end_inset

 there are the reprasantation of the registration page regarding respectively
 the mobile and web application.
 A guest has to insert on all the form inputs and press the 
\begin_inset Quotes eld
\end_inset

register
\begin_inset Quotes erd
\end_inset

 button.
\end_layout

\begin_layout Itemize
In Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:User-home-page"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:User-home-page-1"

\end_inset

 there are the actions that the user can perform in his home page both for
 the mobile and web application.
\end_layout

\begin_layout Itemize
In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Manage-profile"

\end_inset

 is presented the mockup for the management of the user profile.
\end_layout

\begin_layout Itemize
In Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Taxi-request-mobile"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Taxi-request-web"

\end_inset

 there are the mobile and web mockups of one of the main features of the
 application, the taxi request.
 The user has to insert starting and destination addresses, the number of
 passengers and if he wants, he can check the sharing option.
\end_layout

\begin_layout Itemize
In Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Taxi-reservation-mobile"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Taxi-reservation-web"

\end_inset

 there are the mobile and web mockups taxi reservation.
 The user has to insert starting and destination addresses, the number of
 passengers and if he wants, he can check the sharing option as in the request,
 but moreover he has to insert date and time of the ride.
\end_layout

\begin_layout Itemize
In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Check-taxi-status"

\end_inset

 there is the mobile mockup in which is presented the page where the user
 can check the position of the taxi and its excpected arrival time.
\end_layout

\begin_layout Itemize
In Figures 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Check-reservations-mobile"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Check-reservations-web"

\end_inset

 are presented the mobile and web mockups for the reservations page, where
 the user can check his reservations and, in case, delete them.
\end_layout

\begin_layout Subsection
Driver side application
\end_layout

\begin_layout Standard
In this section are presented the mockups relative to the application available
 for the drivers.
\end_layout

\begin_layout Itemize
In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Driver-home-page"

\end_inset

 there is the home page of the application with all the respective actions
 available for the driver.
\end_layout

\begin_layout Itemize
In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Availability-management"

\end_inset

 there is the representation of the management of the drivers availability.
\end_layout

\begin_layout Itemize
In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Ride-confirmation"

\end_inset

 is represented the mockup relative to the confirmation of the rides.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Guest-home-mobile"

\end_inset

Guest home mobile
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/LoginMobile.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Guest-registration-mobile"

\end_inset

Guest registration mobile
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/RegistrationMobile.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Guest-home-web"

\end_inset

Guest home web
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/LoginWeb.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Guest-registration-web"

\end_inset

Guest registration web
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/RegistrationWeb.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:User-home-page"

\end_inset

User home page mobile
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/UserHomePageMobile.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Manage-profile"

\end_inset

Manage profile
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/ManageProfileMobile.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:User-home-page-1"

\end_inset

User home page web
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/HomeWeb.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Taxi-request-mobile"

\end_inset

Taxi request mobile
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/RequestTaxiMobile.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Taxi-reservation-mobile"

\end_inset

Taxi reservation mobile
\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/TaxiReservationMobile.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Taxi-request-web"

\end_inset

Taxi request web
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/RequestsWeb.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Taxi-reservation-web"

\end_inset

Taxi reservation web
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/ReservationsWeb.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Check-taxi-status"

\end_inset

Check taxi status mobile
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/CheckTaxiStatusMobile.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Check-reservations-mobile"

\end_inset

Check reservations mobile
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/CheckReservationMobile.png
	display false
	width 100line%

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Check-reservations-web"

\end_inset

Check reservations web
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/CheckReservationsWeb.png
	display false
	width 100line%

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "35pheight%"
height_special "none"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Driver-home-page"

\end_inset

Driver home page
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/DriverHomeMobile.png
	display false
	width 80line%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "40pheight%"
height_special "none"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Availability-management"

\end_inset

Availability management
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/ManageAvailabilityMobile.png
	display false
	width 80line%

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace*{\fill}
\end_inset


\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "40pheight%"
height_special "none"
status open

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Ride-confirmation"

\end_inset

Ride confirmation
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename Mockups/DriverConfirmationMobile.png
	display false
	width 80line%

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:Requirement's-Traceability"

\end_inset

Requirement's Traceability
\end_layout

\begin_layout Section
Registration and Login
\end_layout

\begin_layout Standard
These requirements can be retreived in the subsection 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Login"

\end_inset

 of the Runtime view, that explain how the login works, whereas the correctness
 of the data for registration and login are checked by the Security Manager
 component( susbection 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Security-Manager"

\end_inset

of the Component view.
\end_layout

\begin_layout Section
User side taxi reuqest, sharing, reservation
\end_layout

\begin_layout Standard
These other requirements can be retreived in subsection 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Shared-request"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Reservation"

\end_inset

of the Runtime view.
 Furthermore it can be seen in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:RideManager-main-Reservation-han"

\end_inset

 and
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:RideManager-main-Reservation-han"

\end_inset

how it works in a deeper way for the user side.
 The grap
\end_layout

\begin_layout Section
Taxi driver side and notifications
\end_layout

\begin_layout Standard
These requirements can be retreived as in the previous section but in addition
 see the subsection 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Availability-Management"

\end_inset

.
\end_layout

\begin_layout Section
Queue management
\end_layout

\begin_layout Standard
These requirements can be retreived in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:QueueManager-Main-Distribution-P"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:QueueManager-Main-Positioning"

\end_inset

, that show how the S2B guarantees the fair management of the queue required.
\end_layout

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "chap:Other-Information"

\end_inset

Other Information
\end_layout

\begin_layout Standard
In this chapter are present all the information relative to the redaction
 of this document.
\end_layout

\begin_layout Section
Working hours
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="12" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Giorno
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alessandro
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Davide
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stefano
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
22/10/2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23/10/2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
26/10/2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
28/10/2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
30/10/2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
02/11/2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
03/11/2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
04/11/2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
05/11/2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
06/11/2015
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Total hours
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
24
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
26.5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
23
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_body
\end_document
