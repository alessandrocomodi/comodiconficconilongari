#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{babel}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding utf8
\fontencoding T1
\font_roman default
\font_sans default
\font_typewriter courier
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement !h
\paperfontsize default
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 4cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
myTaxiService
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
This section aims to show in general terms the purpose and a brief description
 of the project, with the integration of a glossary which will be useful
 for the better understanding of the terms.
 
\end_layout

\begin_layout Section
Purpose
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
This is the Requirement Analysis and Specification Document of the project.
 Its purpose is to give fairly detailed specifications for the system to
 be.
 It illustrates a complete declaration for the development system, explain
 constraints and possible interactions with other external applications.
 The aim of this document is to be proposed to stakeholders for their approval
 and to be as a reference for the development team.
 
\end_layout

\begin_layout Section
Scope
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
Users with prior registration, through a web or a mobile application, are
 able to request a taxi, giving the starting position of the ride and the
 number of passengers.
 The overall area covered by taxis is divided in smaller zones by the system,
 which picks the first available taxi in the zone selected by the user or
 place the user in queue if no taxi is available at the moment.
 It then sends a notification to the chosen taxi driver through the mobile
 app.
 The taxi driver has to decide whether to accept or decline the intervention.
 Once a taxi driver confirms the user is notified of the needed time for
 the taxi to arrive and is given a code in order to verify his identity.
 Users can reserve taxis giving the system the starting and the arrival
 position besides the starting time.
 It is not possible to reserve within the last two hours before the ride.
 If the request for a reservation is accepted by the system it confirms
 the user about his ride and places a taxi at the starting position 10 minutes
 before the meeting time.
 Users can also enable the taxi sharing option when sending a request.
 The system, in this case, searches for other users who are willing to share
 a taxi.
 If there are users who go in the same direction the system alerts all the
 users and the taxi that the ride will be shared and calculates the fee
 for each user depending on the length of their ride.
 
\end_layout

\begin_layout Section
Stakeholders
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The government of the city, the institution which submitted and funded the
 project for the most part.
 Its main objective is to reorganize and optimize the city taxi service
 under the request of the inhabitants that complained about the bad quality
 of the service.
 The taxi companies which joined the project and funded the remaining part.
 Their main goal is to earn the most from through a better management of
 their service.
 The inhabitants / future users of the application who wants an easier access
 to the service and a reduced waiting time in queue for a taxi.
 
\end_layout

\begin_layout Section
Glossary
\end_layout

\begin_layout Standard
This section explain the meaning of frequently used terms in this document.
 
\end_layout

\begin_layout Itemize
MTS: acronym of the application and the full name is 
\begin_inset Quotes eld
\end_inset

MyTaxiService
\begin_inset Quotes erd
\end_inset

; 
\end_layout

\begin_layout Itemize
Guest: person that needs to register to the system in order to access all
 of the functionalities; 
\end_layout

\begin_layout Itemize
User: a person that is registered to the system and can access to the costumer's
 services; 
\end_layout

\begin_layout Itemize
Taxi driver: the person who is logged in as a taxi driver.
 It is needed to distinguish between normal users (customers) and the taxi
 drivers.
 
\end_layout

\begin_layout Itemize
Application: with this term it is intended both the web and mobile application.
 When a different specification for the web and mobile is needed, it will
 be explicitly said.
 
\end_layout

\begin_layout Itemize
Request: an immediate need of a taxi.
 
\end_layout

\begin_layout Itemize
Reservation: prenotation of a taxi in a postponed time and date.
 
\end_layout

\begin_layout Itemize
Ride: used to identify both requests and reservations.
 
\end_layout

\begin_layout Itemize
Busy: when a taxi driver has accepted a ride and therefore he is not in
 the queue.
 
\end_layout

\begin_layout Itemize
Available: when a taxi driver is in a queue waiting to accept a ride.
 
\end_layout

\begin_layout Chapter
Overall description
\end_layout

\begin_layout Section
Product Perspectives
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The application to be implemented is going to be mostly independent and
 self-contained although it will have to be supported by some external systems.
 The management of the taxi queues and the allocation of the taxi for each
 passenger is done automatically by the application.
 myTaxiService is going to be developed as both a Mobile and Web application
 and so, in order to correctly work, it will need to be integrated with
 Internet.
 Another integration is the use of GPS for the navigation system of each
 taxi.
 It is going to be used to gather information about the position of the
 taxis, so that the system can calculate the optimal route and the number
 of taxis in each zone.
 
\end_layout

\begin_layout Section
Product Functionalities
\end_layout

\begin_layout Standard
\paragraph_spacing onehalf
The actors and the relative features for each one that myTaxiServer offers
 are: 
\end_layout

\begin_layout Description
A1 Guest: guests can:
\end_layout

\begin_layout Itemize
register; 
\end_layout

\begin_layout Itemize
log in.
\end_layout

\begin_layout Description
A2 User: users can: 
\end_layout

\begin_layout Itemize
modify personal information; 
\end_layout

\begin_layout Itemize
request a taxi; 
\end_layout

\begin_layout Itemize
check taxi status; 
\end_layout

\begin_layout Itemize
make a reservation; 
\end_layout

\begin_layout Itemize
dismiss a reservation; 
\end_layout

\begin_layout Itemize
abilitate sharing option.
 
\end_layout

\begin_layout Description
A3 Taxi Driver: taxi drivers can: 
\end_layout

\begin_layout Itemize
change availability; 
\end_layout

\begin_layout Itemize
confirm or decline a request.
 
\end_layout

\begin_layout Section
User characteristics
\end_layout

\begin_layout Standard
Users of the application are required to have a basic web knowledge and
 a device, like a personal computer or a smartphone, to be able to utilize
 the service and an identification document in order to avoid the registration
 of multiple accounts by the same person.
 Taxi drivers aside from the previous specifications and the strict necessity
 of a smartphone with integrated gps system are registered by the taxi company
 to avoid any kind of illegal use.
\end_layout

\begin_layout Section
Constraints and General Assumptions
\end_layout

\begin_layout Subsection
Regulatory policies
\end_layout

\begin_layout Standard
The system has to follow the laws about the privacy of the data given by
 the users and the policies regarding cookie storage.
\end_layout

\begin_layout Subsection
Hardware limitations
\end_layout

\begin_layout Standard
On the user side the application has to run on a device connected to the
 internet while on the taxi driver side the device has to be equipped also
 with a GPS system.
 The system has to run on a rented or owned server.
\end_layout

\begin_layout Subsection
Software limitations
\end_layout

\begin_layout Itemize
If it is run on a mobile device, the application needs to be compatible
 with the following operating systems: iOS, Android and Windows Phone, covering
 at least the 90% of the devices.
 
\end_layout

\begin_layout Itemize
The application, if used via the web, has to be compatible with the most
 important browsers (Chrome, Firefox, Internet Explorer and Safari).
 
\end_layout

\begin_layout Subsection
Interfaces to other applications
\end_layout

\begin_layout Standard
API’s for maps, GPS management and the navigation system, besides the use
 of the different application markets are necessary.
 An e-mailing interface is also needed to send confirmation of the various
 reservations and requests.
\end_layout

\begin_layout Subsection
Parallel operations
\end_layout

\begin_layout Standard
MTS needs to support parallel operations from different users and taxi drivers
\end_layout

\begin_layout Section
Domain Assumptions
\end_layout

\begin_layout Standard
All the possible ambiguities and the needed hypotheses are clarified in
 this section and explained with all their reasons.
\end_layout

\begin_layout Subsection
User identification
\end_layout

\begin_layout Standard
In order to avoid possible multiple accounts or any kind of abuse of the
 application, user must register themselves with a valid email address and
 also must attach a valid identification document.
 Both of them are unique by definition.
\end_layout

\begin_layout Subsection
Taxi Driver identification
\end_layout

\begin_layout Standard
The mobile application for drivers isn’t available on marketplaces, this
 owing to prevent from any kind of cyberattack or illegal use.
 Every taxi company provides the application and a unique identification
 code, among all companies, to each driver.
\end_layout

\begin_layout Subsection
Taxi zones
\end_layout

\begin_layout Standard
The city is divided in zones, each one with two square kilometers of extension
 approximately.
\end_layout

\begin_layout Subsection
Taxi availability
\end_layout

\begin_layout Standard
When a driver declare his availability to the system, he is in the queue
 and can answer to a request in every moment.
 The driver may also not give the disposability and the system doesn’t consider
 him as in a zone queue.
\end_layout

\begin_layout Subsection
Reservation
\end_layout

\begin_layout Standard
The taxi driver chosen by the system for a reservation is always an available
 taxi .
\end_layout

\begin_layout Subsection
Sharing option
\end_layout

\begin_layout Standard
All shared rides are notified to the driver, who is informed of all destination
 he has to reach, and also all passengers.
\end_layout

\begin_layout Subsection
Sharing decline
\end_layout

\begin_layout Standard
When a user receives a confirmation of a shared ride, he can't delete the
 call anymore.
\end_layout

\begin_layout Subsection
GPS correctness
\end_layout

\begin_layout Standard
All the GPS data incoming from different devices are 100% correct.
\end_layout

\begin_layout Subsection
Starting point correctness
\end_layout

\begin_layout Standard
The starting point inserted from a user is always correct.
\end_layout

\begin_layout Chapter
Specific Requirements and Scenarios
\end_layout

\begin_layout Standard
In this chapter there are the main functional requirements with the relative
 scenarios, event flows and scheme diagrams.
 The reader can also find the non-functional requirements of the application.
\end_layout

\begin_layout Section
Functional Requirements
\end_layout

\begin_layout Standard
In this section are described the main functional requirement.
\end_layout

\begin_layout Subsection
Registration and login
\end_layout

\begin_layout Enumerate
Guests, who are not yet logged in the system, are only able to login or
 to register.
 
\end_layout

\begin_layout Enumerate
If a guest tries to login with wrong credentials he is requested to retry
 and sent to the previous page.
 
\end_layout

\begin_layout Enumerate
During the registration guests have to give a valid email address to which
 will be sent a confirmation email and a valid ID document code to demonstrate
 their legitimacy.
 The system checks for the authenticity of the document before accepting
 the registration.
 
\end_layout

\begin_layout Enumerate
When registering a guest has also to insert a password with at least eight
 characters.
 
\end_layout

\begin_layout Subsection
Profile management
\end_layout

\begin_layout Enumerate
Users are able to add and modify their email, password, telephone number,
 home address.
 
\end_layout

\begin_layout Enumerate
Users can change the ID document code but it has to be verified by the system.
 
\end_layout

\begin_layout Enumerate
If the users modifies the password, the system must ask for the old password
 in order to verify the authenticity of the user.
 This to increment the security of the application.
 
\end_layout

\begin_layout Enumerate
Users cannot add more than one home address and ID document code.
 
\end_layout

\begin_layout Enumerate
Users are not able to modify their name and surname.
 
\end_layout

\begin_layout Subsection
User side taxi request
\end_layout

\begin_layout Enumerate
If users give non existing starting or destination addresses the system
 notifies them to try again and refuses the request.
 
\end_layout

\begin_layout Enumerate
If the user has already a pending request and asks for another one he is
 notified that the second request will not be forwarded and it is refused.
 
\end_layout

\begin_layout Enumerate
If the request is vaild the user is asked to wait for the first taxi that
 will accept it.
 
\end_layout

\begin_layout Enumerate
When a taxi driver accepts the request, the user is given the taxi ID and
 a code to show to the driver in order to avoid other passengers to take
 the incoming taxi.
 
\end_layout

\begin_layout Enumerate
A user is able to see where the taxi is and the expected time for its arrival.
 
\end_layout

\begin_layout Subsection
User side taxi sharing
\end_layout

\begin_layout Enumerate
While sending a request or reserving a taxi the user must have the possibility
 to share the ride with other users.
 
\end_layout

\begin_layout Enumerate
If the ride will be shared the client is advised from the system with a
 notification containing the percentage of the owed fee.
 
\end_layout

\begin_layout Subsection
User side taxi reservation
\end_layout

\begin_layout Enumerate
To reserve a taxi the user must provide date and time of the reservaiton.
 
\end_layout

\begin_layout Enumerate
Date must be greater or equal than the one in which the reservation is submitted.
 
\end_layout

\begin_layout Enumerate
Users cannot reserve in the last two hours before the ride and so those
 hours must be unavailable.
 
\end_layout

\begin_layout Enumerate
Users must insert starting point and final destination of the ride.
 
\end_layout

\begin_layout Enumerate
If users give non existing starting or destination addresses the system
 notifies them to try again and refuses the reservation.
 
\end_layout

\begin_layout Enumerate
As the system can compute the average time of the reserved ride, if the
 user asks for another ride for a time in which he should still be on the
 first one it is refused and the client notified.
 
\end_layout

\begin_layout Enumerate
Users are notified when the taxi driver accepts the ride.
 
\end_layout

\begin_layout Enumerate
Users are able to cancel the reservation until 10 minutes before the meeting
 time, not later.
 
\end_layout

\begin_layout Subsection
Taxi driver side notifications
\end_layout

\begin_layout Enumerate
Drivers are told by the system in which zone they are working.
 
\end_layout

\begin_layout Enumerate
When ready, the drivers have to alert the system that they're waiting for
 a request and are put in the queue of their zone.
 
\end_layout

\begin_layout Enumerate
When a request arrives to the system the chosen taxi driver is given the
 informations about the ride.
 
\end_layout

\begin_layout Enumerate
A taxi driver has to answer the request within 1 minute otherwise the reqeust
 passes to the next available taxi and he is moved to the bottom of the
 queue.
 
\end_layout

\begin_layout Enumerate
Taxi drivers must be informed if a ride is shared or not.
 
\end_layout

\begin_layout Enumerate
If a ride is a reservation the taxi driver must be informed of it.
 
\end_layout

\begin_layout Enumerate
Taxi drivers can only see their own requests and reservations and not the
 ones of other drivers.
 
\end_layout

\begin_layout Enumerate
Taxi drivers cannot receive notification while busy.
 
\end_layout

\begin_layout Enumerate
When a taxi driver accepts a request he is automatically set to busy and
 removed from the queue.
 
\end_layout

\begin_layout Subsection
Queue Management
\end_layout

\begin_layout Enumerate
The city is divided in virtual zones.
 
\end_layout

\begin_layout Enumerate
Each zone of the city has an assigned queue of taxis.
 
\end_layout

\begin_layout Enumerate
The system is aware of the positions of each taxi through GPS informations.
 
\end_layout

\begin_layout Enumerate
The system knows the statistic distribution of taxi requests and reservations
 in the city and analyzes through these data the optimal division of taxis
 in different zones.
 
\end_layout

\begin_layout Enumerate
When a taxi driver becomes available he is informed by the system in which
 zone he is assigned.
 
\end_layout

\begin_layout Enumerate
In case a request cannot be accepted by any taxi in the zone the system
 searches for the nearest taxi in the surrounding zones.
 
\end_layout

\begin_layout Enumerate
Taxis rotate their positions during the week to avoid unfair management
 and significant difference in rides and payment.
 
\end_layout

\begin_layout Section
Scenarios
\end_layout

\begin_layout Standard
In this section are described some of the most frequent use case of the
 application, divided in several different scenarios.
\end_layout

\begin_layout Subsection
Registration
\end_layout

\begin_layout Standard
A person has just downloaded the application from the app store and he would
 like to make use of it.
 He decides to register to it and so he clicks on the “sign up” button.
 A registration form shows up and he fills it with his personal data.
 If the information are correct he becomes a new user of the product, otherwise
 he is redirected to the home page with an error notification.
\end_layout

\begin_layout Subsection
Login
\end_layout

\begin_layout Standard
A user of myTaxiService needs a taxi ride.
 He starts the application and clicks on the “login” button.
 After doing that he is redirected to the login page and so he fills the
 form with his e-mail address, the one he used to register to the service,
 and his password.
 If the informations are correct he is able to make a taxi request, otherwise
 an error message will appear.
 
\end_layout

\begin_layout Subsection
Taxi request
\end_layout

\begin_layout Standard
A user wants to request a taxi from the central station.
 He clicks on the “request” button and fills the form, with the starting
 and destination point.
 He then waits for the confirmation.
 When a taxi driver confirms the request a notification with the taxi ID,
 a code that has to be shown to the driver and the approximate waiting time
 is sent to the user.
 
\end_layout

\begin_layout Subsection
Check for taxi status
\end_layout

\begin_layout Standard
A user has just requested a taxi and a driver confirmed the ride.
 The user wants to know how much time is left until the arrival of the taxi
 and the position of this one.
 He then clicks on the “check taxi status” button and selects the request
 he made.
\end_layout

\begin_layout Subsection
Taxi reservation
\end_layout

\begin_layout Standard
A user wants to reserve a taxi for the next day.
 He clicks on the “reserve” button and then completes the form with the
 time and date, the starting point and the final destination.
 The confirmation of the insertion of the ride in the system is sent to
 the user.
 The system manages the reservation as a taxi request, allocating a taxi
 ten minutes before the meeting time.
 From this point the execution flow equal to a taxi request.
 
\end_layout

\begin_layout Subsection
Delete reservation
\end_layout

\begin_layout Standard
A user has made a reservation for a taxi for the next day.
 He then decides to delete his reservations.
 He goes to the home page of the app, clicks on the “check taxi status”
 then he selects the reservation he made for the next day and deletes it
 and it is removed from the system.
 
\end_layout

\begin_layout Subsection
Share a taxi
\end_layout

\begin_layout Standard
A first user wants to reach a destination and a second user’s destination
 is on the road of the first one.
 Both of them decided to use the possibility of sharing the taxi.
 The system calculates the road and the fee percentage for each passengers
 and sends a notification to the first available taxi driver.
 A confirmation arrives to both the users who shares the ride.
 
\end_layout

\begin_layout Subsection
Taxi driver availability
\end_layout

\begin_layout Standard
A taxi driver has just completed a ride and he is able to receive other
 requests.
 He then goes to the availability options page on the application and sets
 himself as 
\begin_inset Quotes eld
\end_inset

available
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsection
Taxi driver confirmation
\end_layout

\begin_layout Standard
A taxi driver receives a request for a ride.
 If he can take the request he confirms his availability and a notification
 is sent to the passenger, otherwise the system tries with the next taxi
 in the queue and so on.
 
\end_layout

\begin_layout Section
Event flow and Scheme Diagrams
\end_layout

\begin_layout Standard
In this section the reader can find the event flow of the above scenarios
 are analyzed in detail and are accompained by the relative schemes.
\end_layout

\begin_layout Subsection
Use Case Diagram
\end_layout

\begin_layout Standard
Below is presented the Use Case Diagram which represents all the main use
 cases of the application.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/useCaseDiagram.png
	display false
	width 100line%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Use Case Diagram for myTaxiService
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Class Diagram
\end_layout

\begin_layout Standard
Below is presented the Class Diagram which represents the main classes of
 the application
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/classDiagram.png
	display false
	width 100line%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Class Diagram for myTaxiService
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Subsection
Registration
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="80line%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Guest
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Precondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the visitor doesn't have an account and he isn't yet registered
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
the guest accesses to the application or to the web page
\end_layout

\begin_layout Enumerate
he then clicks on the “sign up” button
\end_layout

\begin_layout Enumerate
he fills the form with his personal informations, a valid e-mail and ID
 document
\end_layout

\begin_layout Enumerate
he clicks on “register” button
\end_layout

\begin_layout Enumerate
the system checks the given inputs
\end_layout

\begin_layout Enumerate
the guest is inserted in the system as a registered user
\end_layout

\begin_layout Enumerate
the guest is sent to the home page of the application
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postcondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the guest becomes a new user of the application and from now on can log
 in
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the e-mail is already present in the system so it is not anymore unique
 or the given ID document is not valid
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
Login
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="80line%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
guest
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Precondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the guest is registered in the system
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
the guest fills the form, inserting as input his e-mail address and his
 password
\end_layout

\begin_layout Enumerate
the guest clicks on the “log in” button
\end_layout

\begin_layout Enumerate
the system checks the correctness of the input
\end_layout

\begin_layout Enumerate
the guest becomes a user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postcondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the user can access to all the available functionalities
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the input password or e-mail are incorrect and the guest cannot log in
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Taxi request
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="80line%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Precondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the user is logged in
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
the user clicks on the “request” button
\end_layout

\begin_layout Enumerate
he then fills the form with the starting point and the final destination
\end_layout

\begin_layout Enumerate
he clicks on the “submit” button
\end_layout

\begin_layout Enumerate
The system analyzes the request and, depending on the zone and the queue
 of taxis sends a notification to the first available taxi in the queue
\end_layout

\begin_layout Enumerate
When a taxi driver confirms the ride a notification is sent to the user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postcondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the user successfully requested the ride and waits for the arrival of the
 taxi 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Eceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
if the time of the ride coincides with a reservation that the user has previousl
y made the request is refused
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Check for taxi status
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="80line%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Precondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the user has requested a taxi
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
the user clicks on the “check taxi status” on the home page
\end_layout

\begin_layout Enumerate
the system uses the GPS information to calculate the position of the incoming
 taxi and the expected time
\end_layout

\begin_layout Enumerate
the system shows to the user the information gathered about the incoming
 taxi
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postcondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the user knows all the information about the arriving taxi
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Taxi reservation
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="80line%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Precondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the user is logged in the system
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
the user clicks on the “reserve” button
\end_layout

\begin_layout Enumerate
he fills the form with the time, starting point and final destination
\end_layout

\begin_layout Enumerate
if the information are correct the reservation is inserted in the system
\end_layout

\begin_layout Enumerate
the system informs the user of the occurred insertion
\end_layout

\begin_layout Enumerate
the system sends a notification to the first available taxi in the queue
 10 minutes before the meeting point
\end_layout

\begin_layout Enumerate
when a taxi driver confirms the ride a notification with the summary of
 the reservation is sent to the user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postcondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the user has a new reservation stored in the system
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the reservation time coincides with another reservation made in a previous
 moment
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Delete a reservation
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="80line%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Precondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the user made a reservation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
the user clicks on the 
\begin_inset Quotes eld
\end_inset

check reservations
\begin_inset Quotes erd
\end_inset

 button.
\end_layout

\begin_layout Enumerate
he then selects the reservation to be deleted
\end_layout

\begin_layout Enumerate
the user clicks on the 
\begin_inset Quotes eld
\end_inset

delete
\begin_inset Quotes erd
\end_inset

 button
\end_layout

\begin_layout Enumerate
the system removes the reservation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postcondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the reservation that the user made is not present anymore in the system
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Share a taxi
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="80line%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Precondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the user is logged in
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
the user clicks on the “request” button
\end_layout

\begin_layout Enumerate
he then fills the form with starting point and final destination
\end_layout

\begin_layout Enumerate
he checks the “share a taxi” option
\end_layout

\begin_layout Enumerate
the system searches for possible matches with other users
\end_layout

\begin_layout Enumerate
if a match is found, the system sends a notification to the taxi driver
\end_layout

\begin_layout Enumerate
when a taxi driver confirms the ride, a confirmation is sent to all the
 users that share the ride
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postcondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the taxi ride is shared among two or more users
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
there is no user departing from the same zone or going in the same direction.
 In this case the user cannot share the ride with anyone
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Taxi driver availability
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="80line%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
taxi driver
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Precondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
he is logged in the system
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
the taxi driver clicks on the “manage availability” button
\end_layout

\begin_layout Enumerate
he is redirected to a page that shows him his availability options
\end_layout

\begin_layout Enumerate
he can choose to set himself as “busy” or “available”
\end_layout

\begin_layout Enumerate
in case the taxi driver switches to “busy” the system removes him from the
 queue
\end_layout

\begin_layout Enumerate
in case the taxi driver switches to “available” the system adds him to the
 queue of taxis
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postcondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
if the taxi driver is “busy” the system will not send him request notifications
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
none
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Taxi driver confirmation
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="80line%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
taxi driver
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Precondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
he is logged in the system and is available
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Event flow
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Enumerate
the taxi driver receives a notification for a ride
\end_layout

\begin_layout Enumerate
He analyzes the allocation request
\end_layout

\begin_layout Enumerate
He then decides whether to accept or refuse it
\end_layout

\begin_layout Enumerate
If he accepts it a confirmation is sent to the user
\end_layout

\begin_layout Enumerate
the system places him out of the queue when the ride is about to begin and
 sets him as “busy”
\end_layout

\begin_layout Enumerate
if the ride is refused the system notifies the next taxi in the queue and
 he is sent in the end of the queue
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Postcondition
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the ride is associated with a taxi driver and he is approaching to the meeting
 point
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Exceptions
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
the taxi driver could not answer in less then one minute, so he is not able
 to confirm the ride anymore
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Non-functional Requirements
\end_layout

\begin_layout Standard
In this section all the non-functional requirements of the application are
 described.
\end_layout

\begin_layout Chapter
Alloy Modeling
\end_layout

\begin_layout Chapter
Other information
\end_layout

\end_body
\end_document
