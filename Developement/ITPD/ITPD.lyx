#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{babel}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman lmodern
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing double
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Integration Test Plan Document
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash
[1cm]
\end_layout

\end_inset


\begin_inset Graphics
	filename images/logo-polimi.png
	display false
	width 60line%

\end_inset


\end_layout

\begin_layout Author
Alessandro Comodi, Davide Conficconi, Stefano Longari
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Chapter
Integration Strategy
\end_layout

\begin_layout Section
Entry criteria
\end_layout

\begin_layout Standard
The Integration Test is an important step for the verification and validation
 of the software developement, and, in order to complete it successfully
 there are several criterias that have to be met before the Integration
 Test starts.
\end_layout

\begin_layout Itemize
All the Unit Tests of all the methods and functions of the entire software
 have been accurately done.
 All the bugs at the Unit Test stage must have been fixed and archived.
\end_layout

\begin_layout Itemize
All the modules necessary to the Integration Test are availble and ready
 to be run.
\end_layout

\begin_layout Itemize
The software is code-complete and fulfills all the requirements that have
 been specified in the RASD and DD.
 
\end_layout

\begin_layout Itemize
All the documentation about the project and the whole software is available
 to let the testers intervene and catch all the possible bugs that may rise,
 judging the correct behaviour of the various components among each other.
\end_layout

\begin_layout Itemize
All the test cases are complete and well documented.
\end_layout

\begin_layout Itemize
All the testing software needed to proceed with this step is correctly installed
 in the system and works properly.
 
\end_layout

\begin_layout Section
Elements to be integrated
\end_layout

\begin_layout Standard
The system can be divided in 3 big subsystems: a communication subsystem,
 an application subsystem and a data subsystem.
 The communication one is composed by the WebClient along with the WebServer
 component, the Mobile Client and the Connection Handler.
 On the other hand the QueueManager and the RideManager compose the application
 subsystem, while the DBMS and the DataAccessManager are part of the data
 subsystem.
 The first and the third one are integrated through the SecurityManager,
 and all the subsystems must be integrated with the Application Controller
 component.
\end_layout

\begin_layout Section
Integration testing strategy
\end_layout

\begin_layout Standard
For the integration testing strategy we chose something in between a bottom-up
 approach and a functional groupings one.
 This has more than one reason as in the Top down approach we would have
 had the advantage of being able to output part of the project before finishing
 the testing of everything, something like a beta of our application that
 wouldn't have had all the functionalities.
 This however was not our objective, as given that the overall application
 is not too complex, the time spent for testing is not enough to justify
 a beta.
 Therefore the bottom-up/functional groupings approach, that gives us other
 advantages: first and most important is the parallel testing of the lower
 modules, that can lower the overall testing time.
 Also, the functional groupings strategy (with this we mean that we will
 divide the project in functional subsystems and then test them bottom-up)
 will allow us to test deeply the modules alone before putting them together,
 assuring us the correct behaviour of each one, thing that would be harder
 to do in a top down/non functional approach.
 
\end_layout

\begin_layout Section
Sequence of component/function integration //TO_DECIDE
\end_layout

\begin_layout Chapter
Individual Steps & Test Description
\end_layout

\begin_layout Chapter
Tools & Test Equipment Required
\end_layout

\begin_layout Chapter
Program Stubs & Test Data Requirement
\end_layout

\begin_layout Chapter
Other Info
\end_layout

\end_body
\end_document
